name: Generate and Send Omnivook

on:
  schedule:
    # Schedule the workflow (00:01 UTC)
    - cron: '1 0 * * *'
  workflow_dispatch:
    inputs:
      since:
        description: 'Start date to filter articles (format YYYY-MM-DD)'
        required: false
      label:
        description: 'Label to filter'
        required: false
      exclude_label:
        description: 'Labels to exclude'
        required: false
      add_label:
        description: 'Label to add to exported articles'
        required: false
      extra_filter:
        description: 'Extra filter to apply (e.g., "language:spanish")'
        required: false
      archive:
        description: 'Archive exported articles'
        type: boolean
        default: true

jobs:
  generate_and_send_ebook:
    runs-on: ubuntu-latest

    steps:

    - name: Checkout code
      uses: actions/checkout@v3

    - uses: astral-sh/setup-uv@v2
      with:
        version: "0.4.10"
     
    - name: Generate eBook
      id: run_omnivook
      env:
        OMNIVORE_TOKEN: ${{ secrets.OMNIVORE_TOKEN }}
        FORCE_COLOR: 1
        COLUMNS: 120
      run: |
        SINCE_DATE="${{ inputs.since }}"
        if [ -z "$SINCE_DATE" ]; then
          SINCE_DATE=$(date -d '1 day ago' +%Y-%m-%d)
        fi
        
        ARCHIVE_FLAG=""
        if [ ${{ inputs.archive }} ]; then
          ARCHIVE_FLAG="--archive"
        fi

        LABEL=""
        if [ -n "${{ inputs.label }}" ]; then
          LABEL="--label \"${{ inputs.label }}\""
        fi

        EXCLUDE_LABEL=""
        if [ -n "${{ inputs.exclude_label }}" ]; then
          EXCLUDE_LABEL="--exclude-label \"${{ inputs.exclude_label }}\""
        fi

        ADD_LABEL="--add-label \"omnivook-${GITHUB_RUN_ID}\""
        if [ -n "${{ inputs.add_label }}" ]; then
          ADD_LABEL="--add-label \"${{ inputs.add_label }},omnivook-${GITHUB_RUN_ID}\""
        fi

        EXTRA_FILTER=""
        if [ -n "${{ inputs.extra_filter }}" ]; then
          EXTRA_FILTER="--filter \"${{ inputs.extra_filter }}\""
        fi

        # Run
        output=$(uv run --with-editable . omnivook --since $SINCE_DATE $LABEL $EXCLUDE_LABEL $ADD_LABEL $EXTRA_FILTER $ARCHIVE_FLAG)
        # Capture last line
        last_line=$(echo "$output" | tail -n 1)

        echo "Last line: $last_line"
        # Set the last line as an output
        echo "last_line=$last_line" >> $GITHUB_OUTPUT
        
        
    - name: Send eBook via email
      env:
        OUTPUT_LAST_LINE: ${{ steps.run_omnivook.outputs.last_line }}
      if: ${{ !contains($OUTPUT_LAST_LINE, 'ERROR') }}
      uses: dawidd6/action-send-mail@v3
      with:
        # setup your mail server connection
        connection_url: ${{ secrets.MAIL_CONNECTION }} 
        # or 
        server_address: ${{ secrets.SERVER }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        server_port: ${{ secrets.SERVER_PORT || '465' }}
        secure: ${{ secrets.SECURE || 'true' }}
        
        subject: "Your Omnivook"
        body: "Attached is your new Omnivook eBook."
        to: ${{ secrets.MAIL_TO }}
        from: ${{ secrets.MAIL_FROM }}
        attachments: "*.epub"

    - name: No eBook send
      env:
        OUTPUT_LAST_LINE: ${{ steps.run_omnivook.outputs.last_line }}
      if: ${{ contains($OUTPUT_LAST_LINE, 'ERROR') }}
      run: |
        echo "No saved today or an Error ocurred: $OUTPUT_LAST_LINE"
